# Example:
name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    # -----env mockup-----
    # env:
    #  DATABASE_URL: ${{ secrets.DATABASE_URL }}
    # --------------------

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # - id: auth
      #   name: Authenticate with Google Cloud
      #   uses: google-github-actions/auth@v2
      #   # -----credentials mockup-----
      #   # with:
      #   #   credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      #   # ----------------------------

      # - name: Set up Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v2

      # - name: Enable Artifact Registry
      #   run: gcloud services enable artifactregistry.googleapis.com

      # - name: Configure Docker to use Artifact Registry
      #   run: gcloud auth configure-docker artifactregistry.io

      # #  Build & Push Backend
      # - name: Build and Push Backend Image
      #   run: gcloud builds submit --tag <REGION>-docker.pkg.dev/<PROJECT_ID>/<REPOSITORY_NAME>/<IMAGE_NAME>/<TAG> ./backend

      # - name: Configure kubectl
      #   run: gcloud container clusters get-credentials my-cluster --region <REGION> --project <PROJECT_ID>

      # - name: Deploy to GKE
      #   run: |
      #     kubectl apply -f k8s/backend-deployment.yaml
      #     kubectl apply -f k8s/backend-service.yaml
      #     kubectl apply -f k8s/backend-ingress.yaml
      #     kubectl apply -f k8s/managed-cert.yaml

      # ----------EXAMPLE FOR ONE POD----------
      # - name: Run Migrations in Backend Pod
      #   run: |
      #     BACKEND_POD=$(kubectl get pod -l app=backend -o jsonpath="{.items[0].metadata.name}")
      #     kubectl exec -it $BACKEND_POD -- npx knex migrate:latest --env=production

      #  ----------EXAMPLE FOR > ONE POD----------
      # - name: Run Migrations in Backend Pod
      #   run: |
      #     BACKEND_POD=$(kubectl get pod -l app=backend -o jsonpath="{.items[?(@.status.containerStatuses[0].ready==true)].metadata.name}" | head -n 1)
      #     kubectl exec -it $BACKEND_POD -- npx knex migrate:latest --env=production
      # ----------OR----------
      # - name: Run Migrations using Kubernetes Job
      #   run: |
      #     kubectl delete job migration-job --ignore-not-found=true
      #     kubectl apply -f k8s/migration-job.yaml
      #     kubectl wait --for=condition=complete job/migration-job --timeout=300s

      # - name: Verify Deployment
      #   run: kubectl rollout status deployment backend

      # - name: Build Frontend
      #   run: |
      #     cd frontend
      #     npm install
      #     npm run build

      # - name: Set up AWS CLI
      #   run: # |
      #     # ----------KEY mockup----------
      #     # aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     # aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     # ------------------------------
      #     aws configure set region <AWS_REGION>

      # - name: Upload Frontend to S3
      #   run: |
      #     aws s3 sync ./frontend/dist s3://<YOUR_BUCKET_NAME> --delete
